{"mappings":"AAAeA,SAASC,cAAc,SAE/BC,iBAAiB,UAgBxB,SAAsBC,GACpBA,EAAEC,iBAEF,IAjBqBC,EAAUC,EACzBC,EAgB0BC,EAAAL,EAAEM,OAAOC,SAAjCC,EAAwBH,EAAxBF,MAAOM,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACJC,OAAOH,EAAMI,OACdD,OAAOF,EAAKG,OACVD,OAAOD,EAAOE,QApBXV,EAwBP,EAxBiBC,EAwBd,KAvBXC,EAAgBS,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLd,EACFY,EAAQ,CAACd,WAAUC,UAEnBc,EAAO,CAACf,WAAUC,S,GAEnBA,E,KAeFgB,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,QAAQC,IAAI,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE3DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,QAAQC,IAAI,sBAAqCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n  });\n};\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.target.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n\n\n  createPromise(2, 1500)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};"],"names":["document","querySelector","addEventListener","e","preventDefault","position","delay","shouldResolve","_elements","target","elements","delay1","step","amount","Number","value","Math","random","Promise","resolve","reject","setTimeout","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.694be569.js.map"}